[build-system]
requires = ["setuptools >= 77.0.3"]
build-backend = "setuptools.build_meta"

[project]
name = "helion"
version = "0.1.0"
authors = [
  { name="Jason Ansel", email="jansel@meta.com" },
]
description = "A Python-embedded DSL that makes it easy to write ML kernels"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
license = { text = "BSD-3-Clause" }
requires-python = ">=3.10"
dependencies = [
    "torch>=2.7.0",
    "typing_extensions>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/pytorch-labs/helion"
Issues = "https://github.com/pytorch-labs/helion/issues"

[tool.ruff]
target-version = "py310"
line-length = 88
src = ["helion"]

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"
line-ending = "lf"

[tool.ruff.lint]
select = [
    "A", "B", "C4", "COM", "D419", "E", "ERA001", "EXE", "F", "FA", "FLY", "FURB",
    "G", "I", "ISC", "LOG", "NPY", "PERF", "PGH004", "PIE", "PLC0131", "PLC0132",
    "PLC0205", "PLC0208", "PLC2401", "PLC3002", "PLE", "PLR0133", "PLR0206",
    "PLR1722", "PLR1736", "PLW0129", "PLW0131", "PLW0133", "PLW0245", "PLW0406",
    "PLW0711", "PLW1501", "PLW1509", "PLW2101", "PLW3301", "PT", "PYI", "Q", "RET",
    "RSE", "RUF005", "RUF007", "RUF008", "RUF009", "RUF010", "RUF012", "RUF013",
    "RUF015", "RUF016", "RUF017", "RUF018", "RUF019", "RUF020", "RUF022", "RUF024",
    "RUF026", "RUF030", "RUF034", "RUF036", "RUF037", "RUF041", "RUF047", "RUF051",
    "RUF056", "RUF100", "RUF200", "S324", "SIM", "SLOT", "TCH", "TD001", "TD002",
    "TD004", "TRY002", "TRY203", "TRY401", "UP", "W", "YTT",
]
ignore = [
    "C409", "C419", "COM812", "E501", "ERA001", "FURB189", "G004", "PERF203",
    "PERF401", "PT009", "SIM102", "SIM108", "SIM115", "UP035", "UP038",
]
extend-safe-fixes = ["TC", "UP045", "RUF013", "RSE102"]
preview = true
exclude = ["test/data/*"]

[tool.ruff.lint.isort]
extra-standard-library = ["typing_extensions"]
known-local-folder = ["helion"]
known-third-party = ["torch"]
required-imports = ["from __future__ import annotations"]
force-single-line = true  # better merge conflicts
force-sort-within-sections = true

[tool.setuptools]
license-files = ["LICENSE"]

