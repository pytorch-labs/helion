This file is automatically generated by assertExpectedJournal calls in test_autotuner.py.
Update expected outputs by running tests with the EXPECTTEST_ACCEPT=1 environment variable set.

--- assertExpectedJournal(TestAutotuner.test_config_fragment0)
helion.Config(block_sizes=[16, 16, 16], loop_orders=[[0, 1]], l2_groupings=[1], range_unroll_factors=[0, 0], range_warp_specializes=[], range_num_stages=[0, 0], range_multi_buffers=[None, None], range_flattens=[None, None], num_warps=4, num_stages=3, indexing='pointer', pid_type='flat')
helion.Config(block_sizes=[16, 16, 16], loop_orders=[[1, 0]], l2_groupings=[8], range_unroll_factors=[1, 2], range_num_stages=[1, 4], range_multi_buffers=[False, None], range_flattens=[False, True], num_warps=2, num_stages=8, indexing='block_ptr', pid_type='persistent_blocked')
helion.Config(block_sizes=[32, 32, 512], loop_orders=[[0, 1]], l2_groupings=[16], range_unroll_factors=[2, 3], range_num_stages=[4, 3], range_multi_buffers=[False, None], range_flattens=[None, None], num_warps=32, num_stages=4, indexing='block_ptr', pid_type='persistent_blocked')
helion.Config(block_sizes=[16, 256, 16], loop_orders=[[0, 1]], l2_groupings=[4], range_unroll_factors=[4, 3], range_num_stages=[0, 2], range_multi_buffers=[True, False], range_flattens=[True, None], num_warps=4, num_stages=7, indexing='pointer', pid_type='persistent_interleaved')
helion.Config(block_sizes=[256, 16, 32], loop_orders=[[1, 0]], l2_groupings=[16], range_unroll_factors=[4, 1], range_num_stages=[3, 3], range_multi_buffers=[None, True], range_flattens=[True, None], num_warps=32, num_stages=2, indexing='block_ptr', pid_type='persistent_interleaved')
helion.Config(block_sizes=[16, 16, 16], loop_orders=[[0, 1]], l2_groupings=[1], range_unroll_factors=[3, 0], range_num_stages=[3, 4], range_multi_buffers=[True, None], range_flattens=[False, None], num_warps=1, num_stages=1, indexing='tensor_descriptor', pid_type='persistent_blocked')
helion.Config(block_sizes=[16, 32, 32], loop_orders=[[1, 0]], l2_groupings=[32], range_unroll_factors=[2, 0], range_num_stages=[0, 4], range_multi_buffers=[None, True], range_flattens=[False, False], num_warps=1, num_stages=3, indexing='block_ptr', pid_type='persistent_blocked')
helion.Config(block_sizes=[32, 16, 16], loop_orders=[[1, 0]], l2_groupings=[4], range_unroll_factors=[1, 0], range_num_stages=[3, 4], range_multi_buffers=[False, False], range_flattens=[None, True], num_warps=4, num_stages=5, indexing='pointer', pid_type='persistent_interleaved')
helion.Config(block_sizes=[16, 16, 16], loop_orders=[[1, 0]], l2_groupings=[32], range_unroll_factors=[2, 1], range_num_stages=[2, 3], range_multi_buffers=[False, True], range_flattens=[False, True], num_warps=8, num_stages=8, indexing='pointer', pid_type='persistent_blocked')
helion.Config(block_sizes=[16, 16, 16], loop_orders=[[0, 1]], l2_groupings=[4], range_unroll_factors=[2, 1], range_num_stages=[1, 1], range_multi_buffers=[False, None], range_flattens=[False, False], num_warps=1, num_stages=8, indexing='pointer', pid_type='persistent_blocked')

--- assertExpectedJournal(TestAutotuner.test_config_fragment1)
helion.Config(block_sizes=[8, 16, 16], loop_orders=[[0, 1, 2]], flatten_loops=[False], range_unroll_factors=[0], range_warp_specializes=[], range_num_stages=[0], range_multi_buffers=[None], range_flattens=[None], num_warps=4, num_stages=3, indexing='pointer', pid_type='flat')
helion.Config(block_sizes=[2, 128, 128], loop_orders=[[1, 2, 0]], flatten_loops=[False], range_unroll_factors=[0], range_warp_specializes=[], range_num_stages=[0], range_multi_buffers=[None], range_flattens=[None], num_warps=1, num_stages=7, indexing='tensor_descriptor', pid_type='flat')
helion.Config(block_sizes=[2, 32, 4], loop_orders=[[1, 0, 2]], flatten_loops=[False], range_unroll_factors=[0], range_warp_specializes=[], range_num_stages=[0], range_multi_buffers=[None], range_flattens=[None], num_warps=16, num_stages=7, indexing='block_ptr', pid_type='flat')
helion.Config(block_sizes=[1, 8, 16], loop_orders=[[1, 0, 2]], flatten_loops=[False], range_unroll_factors=[1], range_num_stages=[2], range_multi_buffers=[True], range_flattens=[True], num_warps=8, num_stages=1, indexing='block_ptr', pid_type='persistent_interleaved')
helion.Config(block_sizes=[2, 16, 256], loop_orders=[[1, 0, 2]], flatten_loops=[False], range_unroll_factors=[4], range_num_stages=[2], range_multi_buffers=[None], range_flattens=[True], num_warps=32, num_stages=3, indexing='block_ptr', pid_type='persistent_blocked')
helion.Config(block_sizes=[2, 2, 32], loop_orders=[[2, 0, 1]], flatten_loops=[True], range_unroll_factors=[0], range_warp_specializes=[], range_num_stages=[0], range_multi_buffers=[None], range_flattens=[None], num_warps=16, num_stages=3, indexing='block_ptr', pid_type='flat')
helion.Config(block_sizes=[1, 32, 32], loop_orders=[[1, 2, 0]], flatten_loops=[True], range_unroll_factors=[0], range_warp_specializes=[], range_num_stages=[0], range_multi_buffers=[None], range_flattens=[None], num_warps=1, num_stages=2, indexing='tensor_descriptor', pid_type='flat')
helion.Config(block_sizes=[8, 64, 2], loop_orders=[[0, 1, 2]], flatten_loops=[False], range_unroll_factors=[3], range_num_stages=[2], range_multi_buffers=[False], range_flattens=[False], num_warps=2, num_stages=1, indexing='block_ptr', pid_type='persistent_interleaved')
helion.Config(block_sizes=[4, 1, 128], loop_orders=[[1, 2, 0]], flatten_loops=[True], range_unroll_factors=[3], range_num_stages=[2], range_multi_buffers=[True], range_flattens=[False], num_warps=1, num_stages=5, indexing='pointer', pid_type='persistent_interleaved')
helion.Config(block_sizes=[1, 16, 64], loop_orders=[[1, 2, 0]], flatten_loops=[False], range_unroll_factors=[3], range_num_stages=[1], range_multi_buffers=[True], range_flattens=[True], num_warps=8, num_stages=3, indexing='tensor_descriptor', pid_type='persistent_blocked')

--- assertExpectedJournal(TestAutotuner.test_save_load_config)
{
  "block_sizes": [
    64,
    64,
    32
  ],
  "loop_orders": [
    [
      1,
      0
    ]
  ],
  "num_warps": 2,
  "num_stages": 1,
  "indexing": "block_ptr",
  "l2_grouping": 32
}
